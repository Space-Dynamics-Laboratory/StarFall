// source: LightCurve.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.starfall.proto.AablData', null, global);
goog.exportSymbol('proto.starfall.proto.LightCurve', null, global);
goog.exportSymbol('proto.starfall.proto.ProcessData', null, global);
goog.exportSymbol('proto.starfall.proto.SampleData', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.starfall.proto.SampleData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.starfall.proto.SampleData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.starfall.proto.SampleData.displayName = 'proto.starfall.proto.SampleData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.starfall.proto.AablData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.starfall.proto.AablData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.starfall.proto.AablData.displayName = 'proto.starfall.proto.AablData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.starfall.proto.ProcessData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.starfall.proto.ProcessData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.starfall.proto.ProcessData.displayName = 'proto.starfall.proto.ProcessData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.starfall.proto.LightCurve = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.starfall.proto.LightCurve.repeatedFields_, null);
};
goog.inherits(proto.starfall.proto.LightCurve, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.starfall.proto.LightCurve.displayName = 'proto.starfall.proto.LightCurve';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.starfall.proto.SampleData.prototype.toObject = function(opt_includeInstance) {
  return proto.starfall.proto.SampleData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.starfall.proto.SampleData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.SampleData.toObject = function(includeInstance, msg) {
  var f, obj = {
    deltaTimeMicrosecs: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    example1Rawi: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    example2Rawi: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    example1Bgsub: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    example2Bgsub: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.starfall.proto.SampleData}
 */
proto.starfall.proto.SampleData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.starfall.proto.SampleData;
  return proto.starfall.proto.SampleData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.starfall.proto.SampleData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.starfall.proto.SampleData}
 */
proto.starfall.proto.SampleData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeltaTimeMicrosecs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExample1Rawi(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExample2Rawi(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExample1Bgsub(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExample2Bgsub(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.starfall.proto.SampleData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.starfall.proto.SampleData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.starfall.proto.SampleData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.SampleData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional int32 delta_time_microsecs = 1;
 * @return {number}
 */
proto.starfall.proto.SampleData.prototype.getDeltaTimeMicrosecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.setDeltaTimeMicrosecs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.clearDeltaTimeMicrosecs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.SampleData.prototype.hasDeltaTimeMicrosecs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 example1_rawi = 2;
 * @return {number}
 */
proto.starfall.proto.SampleData.prototype.getExample1Rawi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.setExample1Rawi = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.clearExample1Rawi = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.SampleData.prototype.hasExample1Rawi = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 example2_rawi = 3;
 * @return {number}
 */
proto.starfall.proto.SampleData.prototype.getExample2Rawi = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.setExample2Rawi = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.clearExample2Rawi = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.SampleData.prototype.hasExample2Rawi = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double example1_bgsub = 4;
 * @return {number}
 */
proto.starfall.proto.SampleData.prototype.getExample1Bgsub = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.setExample1Bgsub = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.clearExample1Bgsub = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.SampleData.prototype.hasExample1Bgsub = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double example2_bgsub = 5;
 * @return {number}
 */
proto.starfall.proto.SampleData.prototype.getExample2Bgsub = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.setExample2Bgsub = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.SampleData} returns this
 */
proto.starfall.proto.SampleData.prototype.clearExample2Bgsub = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.SampleData.prototype.hasExample2Bgsub = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.starfall.proto.AablData.prototype.toObject = function(opt_includeInstance) {
  return proto.starfall.proto.AablData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.starfall.proto.AablData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.AablData.toObject = function(includeInstance, msg) {
  var f, obj = {
    deltaTimeMicrosecs: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    toeReturns: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    phaSum: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.starfall.proto.AablData}
 */
proto.starfall.proto.AablData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.starfall.proto.AablData;
  return proto.starfall.proto.AablData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.starfall.proto.AablData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.starfall.proto.AablData}
 */
proto.starfall.proto.AablData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeltaTimeMicrosecs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setToeReturns(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPhaSum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.starfall.proto.AablData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.starfall.proto.AablData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.starfall.proto.AablData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.AablData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 delta_time_microsecs = 1;
 * @return {number}
 */
proto.starfall.proto.AablData.prototype.getDeltaTimeMicrosecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.setDeltaTimeMicrosecs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.clearDeltaTimeMicrosecs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.AablData.prototype.hasDeltaTimeMicrosecs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 toe_returns = 2;
 * @return {number}
 */
proto.starfall.proto.AablData.prototype.getToeReturns = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.setToeReturns = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.clearToeReturns = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.AablData.prototype.hasToeReturns = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 pha_sum = 3;
 * @return {number}
 */
proto.starfall.proto.AablData.prototype.getPhaSum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.setPhaSum = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.AablData} returns this
 */
proto.starfall.proto.AablData.prototype.clearPhaSum = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.AablData.prototype.hasPhaSum = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.starfall.proto.ProcessData.prototype.toObject = function(opt_includeInstance) {
  return proto.starfall.proto.ProcessData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.starfall.proto.ProcessData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.ProcessData.toObject = function(includeInstance, msg) {
  var f, obj = {
    deltaTimeMicrosecs: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    example1Invfiltered: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    example2Invfiltered: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    integratedSignal: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.starfall.proto.ProcessData}
 */
proto.starfall.proto.ProcessData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.starfall.proto.ProcessData;
  return proto.starfall.proto.ProcessData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.starfall.proto.ProcessData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.starfall.proto.ProcessData}
 */
proto.starfall.proto.ProcessData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeltaTimeMicrosecs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExample1Invfiltered(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExample2Invfiltered(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIntegratedSignal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.starfall.proto.ProcessData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.starfall.proto.ProcessData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.starfall.proto.ProcessData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.ProcessData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional int32 delta_time_microsecs = 1;
 * @return {number}
 */
proto.starfall.proto.ProcessData.prototype.getDeltaTimeMicrosecs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.setDeltaTimeMicrosecs = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.clearDeltaTimeMicrosecs = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.ProcessData.prototype.hasDeltaTimeMicrosecs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double example1_invfiltered = 2;
 * @return {number}
 */
proto.starfall.proto.ProcessData.prototype.getExample1Invfiltered = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.setExample1Invfiltered = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.clearExample1Invfiltered = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.ProcessData.prototype.hasExample1Invfiltered = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double example2_invfiltered = 3;
 * @return {number}
 */
proto.starfall.proto.ProcessData.prototype.getExample2Invfiltered = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.setExample2Invfiltered = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.clearExample2Invfiltered = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.ProcessData.prototype.hasExample2Invfiltered = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double integrated_signal = 4;
 * @return {number}
 */
proto.starfall.proto.ProcessData.prototype.getIntegratedSignal = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.setIntegratedSignal = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.ProcessData} returns this
 */
proto.starfall.proto.ProcessData.prototype.clearIntegratedSignal = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.ProcessData.prototype.hasIntegratedSignal = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.starfall.proto.LightCurve.repeatedFields_ = [3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.starfall.proto.LightCurve.prototype.toObject = function(opt_includeInstance) {
  return proto.starfall.proto.LightCurve.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.starfall.proto.LightCurve} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.LightCurve.toObject = function(includeInstance, msg) {
  var f, obj = {
    triggerTimestamp: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    coarseEventTime: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    samplesList: jspb.Message.toObjectList(msg.getSamplesList(),
    proto.starfall.proto.SampleData.toObject, includeInstance),
    dtoaDataList: jspb.Message.toObjectList(msg.getDtoaDataList(),
    proto.starfall.proto.AablData.toObject, includeInstance),
    processedList: jspb.Message.toObjectList(msg.getProcessedList(),
    proto.starfall.proto.ProcessData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.starfall.proto.LightCurve}
 */
proto.starfall.proto.LightCurve.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.starfall.proto.LightCurve;
  return proto.starfall.proto.LightCurve.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.starfall.proto.LightCurve} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.starfall.proto.LightCurve}
 */
proto.starfall.proto.LightCurve.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCoarseEventTime(value);
      break;
    case 3:
      var value = new proto.starfall.proto.SampleData;
      reader.readMessage(value,proto.starfall.proto.SampleData.deserializeBinaryFromReader);
      msg.addSamples(value);
      break;
    case 4:
      var value = new proto.starfall.proto.AablData;
      reader.readMessage(value,proto.starfall.proto.AablData.deserializeBinaryFromReader);
      msg.addDtoaData(value);
      break;
    case 5:
      var value = new proto.starfall.proto.ProcessData;
      reader.readMessage(value,proto.starfall.proto.ProcessData.deserializeBinaryFromReader);
      msg.addProcessed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.starfall.proto.LightCurve.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.starfall.proto.LightCurve.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.starfall.proto.LightCurve} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.starfall.proto.LightCurve.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSamplesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.starfall.proto.SampleData.serializeBinaryToWriter
    );
  }
  f = message.getDtoaDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.starfall.proto.AablData.serializeBinaryToWriter
    );
  }
  f = message.getProcessedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.starfall.proto.ProcessData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string trigger_timestamp = 1;
 * @return {string}
 */
proto.starfall.proto.LightCurve.prototype.getTriggerTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.setTriggerTimestamp = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.clearTriggerTimestamp = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.LightCurve.prototype.hasTriggerTimestamp = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 coarse_event_time = 2;
 * @return {number}
 */
proto.starfall.proto.LightCurve.prototype.getCoarseEventTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.setCoarseEventTime = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.clearCoarseEventTime = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.starfall.proto.LightCurve.prototype.hasCoarseEventTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SampleData samples = 3;
 * @return {!Array<!proto.starfall.proto.SampleData>}
 */
proto.starfall.proto.LightCurve.prototype.getSamplesList = function() {
  return /** @type{!Array<!proto.starfall.proto.SampleData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.starfall.proto.SampleData, 3));
};


/**
 * @param {!Array<!proto.starfall.proto.SampleData>} value
 * @return {!proto.starfall.proto.LightCurve} returns this
*/
proto.starfall.proto.LightCurve.prototype.setSamplesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.starfall.proto.SampleData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.starfall.proto.SampleData}
 */
proto.starfall.proto.LightCurve.prototype.addSamples = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.starfall.proto.SampleData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.clearSamplesList = function() {
  return this.setSamplesList([]);
};


/**
 * repeated AablData dtoa_data = 4;
 * @return {!Array<!proto.starfall.proto.AablData>}
 */
proto.starfall.proto.LightCurve.prototype.getDtoaDataList = function() {
  return /** @type{!Array<!proto.starfall.proto.AablData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.starfall.proto.AablData, 4));
};


/**
 * @param {!Array<!proto.starfall.proto.AablData>} value
 * @return {!proto.starfall.proto.LightCurve} returns this
*/
proto.starfall.proto.LightCurve.prototype.setDtoaDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.starfall.proto.AablData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.starfall.proto.AablData}
 */
proto.starfall.proto.LightCurve.prototype.addDtoaData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.starfall.proto.AablData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.clearDtoaDataList = function() {
  return this.setDtoaDataList([]);
};


/**
 * repeated ProcessData processed = 5;
 * @return {!Array<!proto.starfall.proto.ProcessData>}
 */
proto.starfall.proto.LightCurve.prototype.getProcessedList = function() {
  return /** @type{!Array<!proto.starfall.proto.ProcessData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.starfall.proto.ProcessData, 5));
};


/**
 * @param {!Array<!proto.starfall.proto.ProcessData>} value
 * @return {!proto.starfall.proto.LightCurve} returns this
*/
proto.starfall.proto.LightCurve.prototype.setProcessedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.starfall.proto.ProcessData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.starfall.proto.ProcessData}
 */
proto.starfall.proto.LightCurve.prototype.addProcessed = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.starfall.proto.ProcessData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.starfall.proto.LightCurve} returns this
 */
proto.starfall.proto.LightCurve.prototype.clearProcessedList = function() {
  return this.setProcessedList([]);
};


goog.object.extend(exports, proto.starfall.proto);

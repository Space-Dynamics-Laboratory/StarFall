// source: Message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.DoubleVector', null, global);
goog.exportSymbol('proto.EventMsg', null, global);
goog.exportSymbol('proto.EventMsg.EventParams', null, global);
goog.exportSymbol('proto.EventMsg.ProcessingState', null, global);
goog.exportSymbol('proto.EventMsg.TriggerDataOneofCase', null, global);
goog.exportSymbol('proto.GlmCollection', null, global);
goog.exportSymbol('proto.GlmSource', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DoubleVector = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DoubleVector, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DoubleVector.displayName = 'proto.DoubleVector';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GlmSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GlmSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GlmSource.displayName = 'proto.GlmSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GlmCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GlmCollection.repeatedFields_, null);
};
goog.inherits(proto.GlmCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GlmCollection.displayName = 'proto.GlmCollection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EventMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.EventMsg.oneofGroups_);
};
goog.inherits(proto.EventMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EventMsg.displayName = 'proto.EventMsg';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.EventMsg.EventParams = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.EventMsg.EventParams, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.EventMsg.EventParams.displayName = 'proto.EventMsg.EventParams';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DoubleVector.prototype.toObject = function(opt_includeInstance) {
  return proto.DoubleVector.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DoubleVector} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DoubleVector.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DoubleVector}
 */
proto.DoubleVector.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.DoubleVector;
  return proto.DoubleVector.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DoubleVector} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DoubleVector}
 */
proto.DoubleVector.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DoubleVector.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.DoubleVector.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DoubleVector} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DoubleVector.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.DoubleVector.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.setX = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.clearX = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DoubleVector.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.DoubleVector.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.setY = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.clearY = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DoubleVector.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.DoubleVector.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.setZ = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.DoubleVector} returns this
 */
proto.DoubleVector.prototype.clearZ = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.DoubleVector.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GlmSource.prototype.toObject = function(opt_includeInstance) {
  return proto.GlmSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GlmSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GlmSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    timeSsue: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    intensityKwsr: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f,
    id: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    clusterSize: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    satId: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    satPosEcfM: (f = msg.getSatPosEcfM()) && proto.DoubleVector.toObject(includeInstance, f),
    losNearPointEcfM: (f = msg.getLosNearPointEcfM()) && proto.DoubleVector.toObject(includeInstance, f),
    losFarPointEcfM: (f = msg.getLosFarPointEcfM()) && proto.DoubleVector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GlmSource}
 */
proto.GlmSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GlmSource;
  return proto.GlmSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GlmSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GlmSource}
 */
proto.GlmSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTimeSsue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIntensityKwsr(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClusterSize(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSatId(value);
      break;
    case 6:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setSatPosEcfM(value);
      break;
    case 7:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setLosNearPointEcfM(value);
      break;
    case 8:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setLosFarPointEcfM(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GlmSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GlmSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GlmSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GlmSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSatPosEcfM();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
  f = message.getLosNearPointEcfM();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
  f = message.getLosFarPointEcfM();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
};


/**
 * optional double time_ssue = 1;
 * @return {number}
 */
proto.GlmSource.prototype.getTimeSsue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.setTimeSsue = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearTimeSsue = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasTimeSsue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double intensity_kwsr = 2;
 * @return {number}
 */
proto.GlmSource.prototype.getIntensityKwsr = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.setIntensityKwsr = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearIntensityKwsr = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasIntensityKwsr = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 id = 3;
 * @return {number}
 */
proto.GlmSource.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.setId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 cluster_size = 4;
 * @return {number}
 */
proto.GlmSource.prototype.getClusterSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.setClusterSize = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearClusterSize = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasClusterSize = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 sat_id = 5;
 * @return {number}
 */
proto.GlmSource.prototype.getSatId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.setSatId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearSatId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasSatId = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DoubleVector sat_pos_ecf_m = 6;
 * @return {?proto.DoubleVector}
 */
proto.GlmSource.prototype.getSatPosEcfM = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 6));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.GlmSource} returns this
*/
proto.GlmSource.prototype.setSatPosEcfM = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearSatPosEcfM = function() {
  return this.setSatPosEcfM(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasSatPosEcfM = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional DoubleVector los_near_point_ecf_m = 7;
 * @return {?proto.DoubleVector}
 */
proto.GlmSource.prototype.getLosNearPointEcfM = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 7));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.GlmSource} returns this
*/
proto.GlmSource.prototype.setLosNearPointEcfM = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearLosNearPointEcfM = function() {
  return this.setLosNearPointEcfM(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasLosNearPointEcfM = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional DoubleVector los_far_point_ecf_m = 8;
 * @return {?proto.DoubleVector}
 */
proto.GlmSource.prototype.getLosFarPointEcfM = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 8));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.GlmSource} returns this
*/
proto.GlmSource.prototype.setLosFarPointEcfM = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GlmSource} returns this
 */
proto.GlmSource.prototype.clearLosFarPointEcfM = function() {
  return this.setLosFarPointEcfM(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GlmSource.prototype.hasLosFarPointEcfM = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GlmCollection.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GlmCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.GlmCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GlmCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GlmCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    measList: jspb.Message.toObjectList(msg.getMeasList(),
    proto.GlmSource.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GlmCollection}
 */
proto.GlmCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GlmCollection;
  return proto.GlmCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GlmCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GlmCollection}
 */
proto.GlmCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.GlmSource;
      reader.readMessage(value,proto.GlmSource.deserializeBinaryFromReader);
      msg.addMeas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GlmCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GlmCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GlmCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GlmCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.GlmSource.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GlmSource meas = 1;
 * @return {!Array<!proto.GlmSource>}
 */
proto.GlmCollection.prototype.getMeasList = function() {
  return /** @type{!Array<!proto.GlmSource>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.GlmSource, 1));
};


/**
 * @param {!Array<!proto.GlmSource>} value
 * @return {!proto.GlmCollection} returns this
*/
proto.GlmCollection.prototype.setMeasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.GlmSource=} opt_value
 * @param {number=} opt_index
 * @return {!proto.GlmSource}
 */
proto.GlmCollection.prototype.addMeas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.GlmSource, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GlmCollection} returns this
 */
proto.GlmCollection.prototype.clearMeasList = function() {
  return this.setMeasList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.EventMsg.oneofGroups_ = [[23]];

/**
 * @enum {number}
 */
proto.EventMsg.TriggerDataOneofCase = {
  TRIGGER_DATA_ONEOF_NOT_SET: 0,
  GLM_DATA: 23
};

/**
 * @return {proto.EventMsg.TriggerDataOneofCase}
 */
proto.EventMsg.prototype.getTriggerDataOneofCase = function() {
  return /** @type {proto.EventMsg.TriggerDataOneofCase} */(jspb.Message.computeOneofCase(this, proto.EventMsg.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EventMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.EventMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EventMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    parentId: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    approxTriggerTimeIsoUtc: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    triggerType: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    processingState: jspb.Message.getFieldWithDefault(msg, 5, 0),
    params: (f = msg.getParams()) && proto.EventMsg.EventParams.toObject(includeInstance, f),
    archive: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    announce: jspb.Message.getBooleanFieldWithDefault(msg, 8, true),
    glmData: (f = msg.getGlmData()) && proto.GlmCollection.toObject(includeInstance, f),
    defaultGlobePosEcfM: (f = msg.getDefaultGlobePosEcfM()) && proto.DoubleVector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EventMsg}
 */
proto.EventMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EventMsg;
  return proto.EventMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EventMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EventMsg}
 */
proto.EventMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEventId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApproxTriggerTimeIsoUtc(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTriggerType(value);
      break;
    case 5:
      var value = /** @type {!proto.EventMsg.ProcessingState} */ (reader.readEnum());
      msg.setProcessingState(value);
      break;
    case 6:
      var value = new proto.EventMsg.EventParams;
      reader.readMessage(value,proto.EventMsg.EventParams.deserializeBinaryFromReader);
      msg.setParams(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchive(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAnnounce(value);
      break;
    case 23:
      var value = new proto.GlmCollection;
      reader.readMessage(value,proto.GlmCollection.deserializeBinaryFromReader);
      msg.setGlmData(value);
      break;
    case 30:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setDefaultGlobePosEcfM(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EventMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EventMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EventMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.EventMsg.ProcessingState} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getParams();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.EventMsg.EventParams.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getGlmData();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      proto.GlmCollection.serializeBinaryToWriter
    );
  }
  f = message.getDefaultGlobePosEcfM();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.EventMsg.ProcessingState = {
  NEW: 0,
  WAITING: 1,
  PROCESSING: 2,
  FAILED: 3,
  PARAMETER_ESTIMATION: 4,
  USER_ANALYSIS: 5,
  APPROVED: 6,
  DEFERRED: 7,
  REJECTED: 8,
  NO_SOLUTION: 9,
  NO_DATA: 10
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.EventMsg.EventParams.prototype.toObject = function(opt_includeInstance) {
  return proto.EventMsg.EventParams.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.EventMsg.EventParams} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventMsg.EventParams.toObject = function(includeInstance, msg) {
  var f, obj = {
    peakBrightnessTimeIsoUtc: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    peakBrightnessPosEcfM: (f = msg.getPeakBrightnessPosEcfM()) && proto.DoubleVector.toObject(includeInstance, f),
    peakBrightnessVelocityKmSec: (f = jspb.Message.getOptionalFloatingPointField(msg, 3)) == null ? undefined : f,
    approxTotalRadiatedEnergy: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    preEntryVelocityEcfKmSec: (f = msg.getPreEntryVelocityEcfKmSec()) && proto.DoubleVector.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.EventMsg.EventParams}
 */
proto.EventMsg.EventParams.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.EventMsg.EventParams;
  return proto.EventMsg.EventParams.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.EventMsg.EventParams} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.EventMsg.EventParams}
 */
proto.EventMsg.EventParams.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPeakBrightnessTimeIsoUtc(value);
      break;
    case 2:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setPeakBrightnessPosEcfM(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPeakBrightnessVelocityKmSec(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setApproxTotalRadiatedEnergy(value);
      break;
    case 5:
      var value = new proto.DoubleVector;
      reader.readMessage(value,proto.DoubleVector.deserializeBinaryFromReader);
      msg.setPreEntryVelocityEcfKmSec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.EventMsg.EventParams.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.EventMsg.EventParams.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.EventMsg.EventParams} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.EventMsg.EventParams.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPeakBrightnessPosEcfM();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPreEntryVelocityEcfKmSec();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.DoubleVector.serializeBinaryToWriter
    );
  }
};


/**
 * optional string peak_brightness_time_iso_utc = 1;
 * @return {string}
 */
proto.EventMsg.EventParams.prototype.getPeakBrightnessTimeIsoUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.setPeakBrightnessTimeIsoUtc = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.clearPeakBrightnessTimeIsoUtc = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.EventParams.prototype.hasPeakBrightnessTimeIsoUtc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DoubleVector peak_brightness_pos_ecf_m = 2;
 * @return {?proto.DoubleVector}
 */
proto.EventMsg.EventParams.prototype.getPeakBrightnessPosEcfM = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 2));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.EventMsg.EventParams} returns this
*/
proto.EventMsg.EventParams.prototype.setPeakBrightnessPosEcfM = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.clearPeakBrightnessPosEcfM = function() {
  return this.setPeakBrightnessPosEcfM(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.EventParams.prototype.hasPeakBrightnessPosEcfM = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double peak_brightness_velocity_km_sec = 3;
 * @return {number}
 */
proto.EventMsg.EventParams.prototype.getPeakBrightnessVelocityKmSec = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.setPeakBrightnessVelocityKmSec = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.clearPeakBrightnessVelocityKmSec = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.EventParams.prototype.hasPeakBrightnessVelocityKmSec = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double approx_total_radiated_energy = 4;
 * @return {number}
 */
proto.EventMsg.EventParams.prototype.getApproxTotalRadiatedEnergy = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.setApproxTotalRadiatedEnergy = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.clearApproxTotalRadiatedEnergy = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.EventParams.prototype.hasApproxTotalRadiatedEnergy = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DoubleVector pre_entry_velocity_ecf_km_sec = 5;
 * @return {?proto.DoubleVector}
 */
proto.EventMsg.EventParams.prototype.getPreEntryVelocityEcfKmSec = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 5));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.EventMsg.EventParams} returns this
*/
proto.EventMsg.EventParams.prototype.setPreEntryVelocityEcfKmSec = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.EventMsg.EventParams} returns this
 */
proto.EventMsg.EventParams.prototype.clearPreEntryVelocityEcfKmSec = function() {
  return this.setPreEntryVelocityEcfKmSec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.EventParams.prototype.hasPreEntryVelocityEcfKmSec = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string event_id = 1;
 * @return {string}
 */
proto.EventMsg.prototype.getEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setEventId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearEventId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasEventId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.EventMsg.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setParentId = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearParentId = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasParentId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string approx_trigger_time_iso_utc = 3;
 * @return {string}
 */
proto.EventMsg.prototype.getApproxTriggerTimeIsoUtc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setApproxTriggerTimeIsoUtc = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearApproxTriggerTimeIsoUtc = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasApproxTriggerTimeIsoUtc = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string trigger_type = 4;
 * @return {string}
 */
proto.EventMsg.prototype.getTriggerType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setTriggerType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearTriggerType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasTriggerType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ProcessingState processing_state = 5;
 * @return {!proto.EventMsg.ProcessingState}
 */
proto.EventMsg.prototype.getProcessingState = function() {
  return /** @type {!proto.EventMsg.ProcessingState} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.EventMsg.ProcessingState} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setProcessingState = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearProcessingState = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasProcessingState = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional EventParams params = 6;
 * @return {?proto.EventMsg.EventParams}
 */
proto.EventMsg.prototype.getParams = function() {
  return /** @type{?proto.EventMsg.EventParams} */ (
    jspb.Message.getWrapperField(this, proto.EventMsg.EventParams, 6));
};


/**
 * @param {?proto.EventMsg.EventParams|undefined} value
 * @return {!proto.EventMsg} returns this
*/
proto.EventMsg.prototype.setParams = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearParams = function() {
  return this.setParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasParams = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool archive = 7;
 * @return {boolean}
 */
proto.EventMsg.prototype.getArchive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setArchive = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearArchive = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasArchive = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool announce = 8;
 * @return {boolean}
 */
proto.EventMsg.prototype.getAnnounce = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, true));
};


/**
 * @param {boolean} value
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.setAnnounce = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearAnnounce = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GlmCollection glm_data = 23;
 * @return {?proto.GlmCollection}
 */
proto.EventMsg.prototype.getGlmData = function() {
  return /** @type{?proto.GlmCollection} */ (
    jspb.Message.getWrapperField(this, proto.GlmCollection, 23));
};


/**
 * @param {?proto.GlmCollection|undefined} value
 * @return {!proto.EventMsg} returns this
*/
proto.EventMsg.prototype.setGlmData = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.EventMsg.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearGlmData = function() {
  return this.setGlmData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasGlmData = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional DoubleVector default_globe_pos_ecf_m = 30;
 * @return {?proto.DoubleVector}
 */
proto.EventMsg.prototype.getDefaultGlobePosEcfM = function() {
  return /** @type{?proto.DoubleVector} */ (
    jspb.Message.getWrapperField(this, proto.DoubleVector, 30));
};


/**
 * @param {?proto.DoubleVector|undefined} value
 * @return {!proto.EventMsg} returns this
*/
proto.EventMsg.prototype.setDefaultGlobePosEcfM = function(value) {
  return jspb.Message.setWrapperField(this, 30, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.EventMsg} returns this
 */
proto.EventMsg.prototype.clearDefaultGlobePosEcfM = function() {
  return this.setDefaultGlobePosEcfM(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.EventMsg.prototype.hasDefaultGlobePosEcfM = function() {
  return jspb.Message.getField(this, 30) != null;
};


goog.object.extend(exports, proto);
